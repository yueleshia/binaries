inputs:
  key:
    description: Name in releases to download
    required: true
    type: string
  name:
    description: Name to rename the downloaded binary, not used if downloading an archive
    required: false
    type: string
  owner_repo:
    default: yueleshia/binaries
    description: Owner/Repo
    required: false
    type: string
  release_tag:
    default: nonsemantic
    description: Owner/Repo
    required: false
    type: string
  sha256:
    description: The SHA256 to validate the binary
    required: true
    type: string
  timeout:
    default: 120
    description: Max seconds for download
    required: false
    type: number
name: Download binary
runs:
  steps:
  - name: DEBUG - Workflow inputs
    run: |-
      # Quoting HEREDOC to prevent script injection
      <<'EOF' cat - >&2
      ${{ ToJSON(inputs) }}
      EOF
    shell: bash
  - env:
      action_path: ${{ github.action_path }}
      bin_dir: ${{ github.workspace }}/bin
      key: ${{ inputs.key }}
      name: ${{ inputs.name }}
      owner_repo: ${{ inputs.owner_repo }}
      release_tag: ${{ inputs.release_tag }}
      sha256: ${{ inputs.sha256 }}
      timeout: ${{ inputs.timeout }}
      tmp_dir: ${{ runner.temp }}
    name: Download ${{ inputs.key }}
    run: |-
      mkdir -p "${bin_dir}"
      dl() {
        "${action_path}/download.sh" "${owner_repo}" "${release_tag}" "${key}" "${1}" "${timeout}" "${sha256}"
      }

      case "${key}"
      in *'.tar.gz'|*'.tar.gzip'|*'.tar.xz')
        dl "${tmp_dir}/${key}" || exit "$?"
        printf %s\\n "Decompressing '${tmp_dir}/${key}' -> '${bin}/'" >&2
        tar -xvf "${tmp_dir}/${key}" -C "${bin_dir}/" || exit "$?"
        if [ "${name}" != "" ] && [ "${key}" != "${name}" ]; then
          printf %s\\n "Skipping rename because we extracted with tar" >&2
        fi
      ;; *)
        dl "${bin_dir}/${key}" || exit "$?"
        chmod +x "${bin_dir}/${key}" || exit "$?"
        if [ "${name}" != "" ] && [ "${key}" != "${name}" ]; then
          printf %s\\n "Renaming ${key} -> ${name}" >&2
          mv "${bin_dir}/${key}" "${bin_dir}/${name}" || exit "$?"
        fi
      esac

      tree -L 2 "${bin_dir}"
    shell: bash
  - env:
      bin_dir: ${{ github.workspace }}/bin
    name: Adding 'bin' to $PATH
    run: |-
      while [ "" != "${p}" ]; do
        x="${p%%:*}"
        p="${p#"${x}"}"
        p="${p#:}"

        if [ "${x}" = "${bin_dir}" ]; then
          printf %s\\n "Found ${bin_dir} in \$PATH, skipping modifying \$PATH" >&2
          exit 0
        fi
      done

      printf %s\\n "PATH=${PATH}:${bin_dir}" >>"${GITHUB_ENV}"
      printf %s\\n "Added ${bin_dir} to \$PATH" "  ${PATH}" >&2
    shell: bash
  using: composite
